set -g default-terminal "tmux-256color"
set -ga terminal-overrides ",xterm-256color:Tc"

bind R source-file ~/.config/tmux/tmux.conf \; display-message "Tmux reloaded!"

set -g default-shell /bin/zsh
set -g default-command "exec /bin/zsh"

# use 'C-a' as prefix
unbind C-b
set-option -g prefix C-a
bind-key C-a send-prefix

set-environment -g TMUX_PLUGIN_MANAGER_PATH '~/.local/share/tmux'

# self install plugin manager and plugins on first startup
if "test ! -d ~/.tmux/plugins/tpm" \
   "run 'git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm && ~/.tmux/plugins/tpm/bin/install_plugins'"

# set -g @plugin 'egel/tmux-gruvbox'
#
# set -g @tmux-gruvbox-right-status-y '%I:%M %p' # 09:54 PM

set -g @plugin "loichyan/tmux-toggle-popup"
# I am binding my leader C-a to open up a popup window in the tmux configuration.
set -g @popup-toggle-mode 'force-close'

set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'rickstaa/tmux-notimy'
set -g @plugin 'tmux-plugins/tmux-open'
set -g @open 'o'
set -g @plugin 'christoomey/vim-tmux-navigator'
set -g @plugin 'schasse/tmux-jump'
set -g @jump-key 'a'
# set -g @plugin 'Morantron/tmux-fingers'
# set -g @fingers-key F
# set -g @fingers-pattern-0 '\S+'

# don't rename windows automatically
set -g allow-rename off

# vi mode
set-window-option -g mode-keys vi
bind-key -T copy-mode-vi 'v' send -X begin-selection

set -g base-index 1
set -g renumber-windows on

# run-shell 'if [ "$(defaults read -g AppleInterfaceStyle 2>/dev/null)" = "Dark" ];'\
# 'then tmux set -g @catppuccin_flavor "macchiato";'\
# 'else tmux set -g @catppuccin_flavor "frappe"; fi'

# set -g @tmux-gruvbox "light"

run-shell 'if [ "$(defaults read -g AppleInterfaceStyle 2>/dev/null)" = "Dark" ];'\
'then tmux set -g @tmux-gruvbox "dark";'\
'else tmux set -g @tmux-gruvbox "light"; fi'

set -g @catppuccin_flavor 'frappe' # latte, frappe, macchiato or mocha
set -g @catppuccin_date_time_text "%Y-%m-%d %I:%M"
set -g @catppuccin_window_status_style "basic"
set -g @catppuccin_window_number_position "left"
set -g @catppuccin_window_text " #W#{?window_zoomed_flag, 🔍,}"
set -g @catppuccin_window_current_text " #W#{?window_zoomed_flag, 🔍,}"
set -g @catppuccin_window_current_fill "number"
set -g @catppuccin_status_left_separator  " "
set -g @catppuccin_status_right_separator ""
set -q @catppuccin_session_text "#S"
set -g window-status-separator ""

set -g @catppuccin_directory_text "#{s|$HOME|~|;s|/.*/|/…/|:pane_current_path}"
# set -g @catppuccin_status_background "none"
#
set -g status-left-length 20
set -g status-left "#{E:@catppuccin_status_session} "
set -g  status-right "#{E:@catppuccin_status_directory}"
set -ag status-right "#{E:@catppuccin_status_date_time}"

# Uncomment to enable catppuccin theme
# set -g @plugin 'catppuccin/tmux#v2.1.1'

set -g @plugin 'tmux-plugins/tmux-sensible' # optional recommended

run '~/.tmux/plugins/tpm/tpm'

# set -g status-position top

setw -g word-separators ' @"=()[]/.'

# Function to handle tmux splits while respecting Neovim context
bind-key - run-shell '\
  current_command="$(tmux display-message -p "#{pane_current_command}")"; \
  if [ "$current_command" = "nvim" ]; then \
    if [ "$(tmux display-message -p "#{pane_current_path}" | grep "term://")" != "" ]; then \
      tmux split-window -v -c "#{pane_current_path}"; \
    else \
      tmux send-keys Escape ":TmuxSplitV" Enter; \
    fi; \
  else \
    tmux split-window -v -c "#{pane_current_path}"; \
  fi'

bind-key \\ run-shell '\
  current_command="$(tmux display-message -p "#{pane_current_command}")"; \
  if [ "$current_command" = "nvim" ]; then \
    if [ "$(tmux display-message -p "#{pane_current_path}" | grep "term://")" != "" ]; then \
      tmux split-window -h -c "#{pane_current_path}"; \
    else \
      tmux send-keys Escape ":TmuxSplitH" Enter; \
    fi; \
  else \
    tmux split-window -h -c "#{pane_current_path}"; \
  fi'

bind r respawn-pane -k "zsh"

# add mouse scroll
setw -g mouse on

# panes navigation
bind ^ last-window
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# panes sizing
bind -r H resize-pane -L 10
bind -r L resize-pane -R 10
bind -r J resize-pane -D 10
bind -r K resize-pane -U 10

# zoom
bind -r i resize-pane -Z

# chatgpt
bind g new-window 'gpt'
bind s split-pane -h 'gpt'
bind S split-pane -v 'gpt'

bind b choose-session

unbind b
bind b break-pane -t :

bind-key -r f run-shell "tmux neww ~/.config/tmux/-sessionizer"
# prevent cuttoff when resizing
set -g focus-events on
set -g terminal-overrides 'xterm*:smcup@:rmcup@'

set -g pane-border-style fg=colour2

# # POPUP SHELL
# bind t popup
# bind -T popup I] copy-mode

bind t if-shell "tmux list-panes -F '#{session_name}' | grep -q 'scratch'" \
    "kill-pane -t scratch" \
    "display-popup -E -w 90% -h 90% 'tmux new-session -A -s scratch'"


# set -g status off
# # if -F "#{==:#{session_windows},1}" "set -g status off" "set -g status on"
# set-hook -g window-linked 'if -F "#{==:#{session_windows},1}" "set -g status off" "set -g status on"'
# set-hook -g window-unlinked 'if -F "#{==:#{session_windows},1}" "set -g status off" "set -g status on"'

# run-shell 'if [ "$(defaults read -g AppleInterfaceStyle 2>/dev/null)" = "Dark" ];'\
# 'then tmux source-file ~/.local/share/nvim/lazy/tokyonight.nvim/extras/tmux/tokyonight_night.tmux;'\
# 'else tmux source-file ~/.local/share/nvim/lazy/tokyonight.nvim/extras/tmux/tokyonight_day.tmux; fi'

set -g @plugin 'TanglingTreats/tmux-everforest' # Adds to the list of plugins
run-shell 'if [ "$(defaults read -g AppleInterfaceStyle 2>/dev/null)" = "Dark" ];'\
'then tmux set -g @tmux-everforest "dark-medium-xterm";'\
'else tmux set -g @tmux-everforest "light-medium-xterm"; fi'

# required for: https://github.com/vimpostor/vim-tpipeline
set -g focus-events on
set -g status-style bg=default
set -g status-left-length 99
set -g status-right-length 99
set -g status-justify absolute-centre
