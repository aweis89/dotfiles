# Turn on true color
set -g default-terminal 'tmux-256color'

bind R source-file ~/.config/tmux/tmux.conf \; display-message "Tmux reloaded!"

set -g default-shell /bin/zsh
set -g default-command "exec /bin/zsh"

# use 'C-a' as prefix
unbind C-b
set-option -g prefix C-a
bind-key C-a send-prefix

set-environment -g TMUX_PLUGIN_MANAGER_PATH '~/.local/share/tmux'

# self install plugin manager and plugins on first startup
if "test ! -d ~/.tmux/plugins/tpm" \
   "run 'git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm && ~/.tmux/plugins/tpm/bin/install_plugins'"

set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'rickstaa/tmux-notimy'
set -g @plugin 'tmux-plugins/tmux-open'
set -g @open 'o'
set -g @plugin 'schasse/tmux-jump'
set -g @jump-key 'a'
set -g @plugin 'Morantron/tmux-fingers'
set -g @fingers-key F
set -g @fingers-pattern-0 '\S+'

# don't rename windows automatically
set -g allow-rename off

# vi mode
set-window-option -g mode-keys vi
bind-key -T copy-mode-vi 'v' send -X begin-selection

set -g base-index 1
set -g renumber-windows on

set -g @catppuccin_flavor 'frappe' # latte, frappe, macchiato or mocha
run-shell 'if [ "$(defaults read -g AppleInterfaceStyle 2>/dev/null)" = "Dark" ];'\
'then tmux set -g @catppuccin_flavor "macchiato";'\
'else tmux set -g @catppuccin_flavor "frappe"; fi'

set -g @catppuccin_date_time_text "%Y-%m-%d %I:%M"
set -g @catppuccin_window_status_style "rounded"
set -g @catppuccin_window_number_position "right"
set -g @catppuccin_window_default_fill "number"
set -g @catppuccin_window_default_text "#W "
set -g @catppuccin_window_current_fill "number"
set -g @catppuccin_window_current_text "#W "
set -g @catppuccin_status_left_separator  " "
set -g @catppuccin_status_right_separator ""
set -g @catppuccin_status_fill "icon"
set -g @catppuccin_status_connect_separator "no"
set -g @catppuccin_directory_text "#{pane_current_path}"
# set -g status-left ""
set -g status-right "#{E:@catppuccin_status_date_time}"
set -ag  status-right "#{E:@catppuccin_status_directory}"
set -g @plugin 'catppuccin/tmux#v2.1.1'

run '~/.tmux/plugins/tpm/tpm'

set -g status-position top

setw -g word-separators ' @"=()[]/.'

# Function to handle tmux splits while respecting Neovim context
bind-key - run-shell '\
  current_command="$(tmux display-message -p "#{pane_current_command}")"; \
  if [ "$current_command" = "nvim" ]; then \
    if [ "$(tmux display-message -p "#{pane_current_path}" | grep "term://")" != "" ]; then \
      tmux split-window -v -c "#{pane_current_path}"; \
    else \
      tmux send-keys Escape ":TmuxSplitV" Enter; \
    fi; \
  else \
    tmux split-window -v -c "#{pane_current_path}"; \
  fi'

bind-key \\ run-shell '\
  current_command="$(tmux display-message -p "#{pane_current_command}")"; \
  if [ "$current_command" = "nvim" ]; then \
    if [ "$(tmux display-message -p "#{pane_current_path}" | grep "term://")" != "" ]; then \
      tmux split-window -h -c "#{pane_current_path}"; \
    else \
      tmux send-keys Escape ":TmuxSplitH" Enter; \
    fi; \
  else \
    tmux split-window -h -c "#{pane_current_path}"; \
  fi'

bind r respawn-pane -k "zsh"

# add mouse scroll
setw -g mouse on

# panes navigation
bind ^ last-window
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# panes sizing
bind -r H resize-pane -L 10
bind -r L resize-pane -R 10
bind -r J resize-pane -D 10
bind -r K resize-pane -U 10

# POPUP SHELL
bind t popup
bind -T popup ] copy-mode

# zoom
bind -r i resize-pane -Z

# chatgpt
bind g new-window 'gpt'
bind s split-pane -h 'gpt'
bind S split-pane -v 'gpt'

bind b choose-session

unbind b
bind b break-pane -t :

bind-key -r f run-shell "tmux neww ~/.config/tmux/-sessionizer"
