set -g default-terminal "tmux-256color"
set -ga terminal-overrides ",xterm-256color:Tc"

bind R source-file ~/.config/tmux/tmux.conf \; display-message "Tmux reloaded!"

set -g default-shell /opt/homebrew/bin/fish
set -g default-command "exec /opt/homebrew/bin/fish"

# use 'C-a' as prefix
unbind C-b
set-option -g prefix C-a
bind-key C-a send-prefix

set-environment -g TMUX_PLUGIN_MANAGER_PATH '~/.local/share/tmux'

# self install plugin manager and plugins on first startup
if "test ! -d ~/.tmux/plugins/tpm" \
   "run 'git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm && ~/.tmux/plugins/tpm/bin/install_plugins'"

set -g @plugin "loichyan/tmux-toggle-popup"
set -g @popup-toggle-mode 'force-close'

set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'rickstaa/tmux-notimy'
set -g @plugin 'tmux-plugins/tmux-open'
set -g @open 'o'
# set -g @plugin 'christoomey/vim-tmux-navigator'
set -g @plugin 'schasse/tmux-jump'
set -g @jump-key 'a'
set -g allow-rename off

# vi mode
set-window-option -g mode-keys vi
bind-key -T copy-mode-vi 'v' send -X begin-selection

set -g base-index 1
set -g renumber-windows on

run '~/.tmux/plugins/tpm/tpm'

setw -g word-separators ' @"=()[]/.'

# Function to handle tmux splits while respecting Neovim context
bind-key - run-shell '\
  current_command="$(tmux display-message -p "#{pane_current_command}")"; \
  if [ "$current_command" = "nvim" ]; then \
    if [ "$(tmux display-message -p "#{pane_current_path}" | grep "term://")" != "" ]; then \
      tmux split-window -v -c "#{pane_current_path}"; \
    else \
      tmux send-keys Escape ":TmuxSplitV" Enter; \
    fi; \
  else \
    tmux split-window -v -c "#{pane_current_path}"; \
  fi'

bind-key \\ run-shell '\
  current_command="$(tmux display-message -p "#{pane_current_command}")"; \
  if [ "$current_command" = "nvim" ]; then \
    if [ "$(tmux display-message -p "#{pane_current_path}" | grep "term://")" != "" ]; then \
      tmux split-window -h -c "#{pane_current_path}"; \
    else \
      tmux send-keys Escape ":TmuxSplitH" Enter; \
    fi; \
  else \
    tmux split-window -h -c "#{pane_current_path}"; \
  fi'

bind r respawn-pane -k "$SHELL"

# add mouse scroll
setw -g mouse on

# panes navigation
bind ^ last-window
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# panes sizing
bind -r H resize-pane -L 10
bind -r L resize-pane -R 10
bind -r J resize-pane -D 10
bind -r K resize-pane -U 10

# zoom
bind -r i resize-pane -Z

bind b choose-session

unbind b
bind b break-pane -t :

bind-key -r f run-shell "tmux neww ~/.config/tmux/-sessionizer"
# prevent cuttoff when resizing
set -g focus-events on
set -g terminal-overrides 'xterm*:smcup@:rmcup@'

## Let the theme control borders
# set -g pane-border-style fg=colour2

bind t if-shell "tmux list-panes -F '#{session_name}' | grep -q 'scratch'" \
    "kill-pane -t scratch" \
    "display-popup -E -w 90% -h 90% 'tmux new-session -A -s scratch'"

# required for: https://github.com/vimpostor/vim-tpipeline
set -g focus-events on
set -g status-style bg=default
set -g status-left-length 99
set -g status-right-length 99
set -g status-justify absolute-centre

bind f popup -h '90%' -w '90%'

# --- Window list formatting with icons ---
# Replace default '*' current-window flag and 'Z' zoom flag with icons.
# Requires a Nerd Font or similar patched font in your terminal.
set -g window-status-style 'fg=default'
set -g window-status-current-style 'fg=blue,bold'
set -g window-status-format "#{?window_zoomed_flag, #[fg=yellow]#[default],}#I:#W"
set -g window-status-current-format "#{?window_zoomed_flag,#[fg=yellow]#[default],}  #I:#W"

# Scroll half-page down (C-d) and up (C-u) without prefix
bind-key -n C-d if-shell -F "#{||:#{==:#{pane_current_command},nvim},#{||:#{==:#{pane_current_command},vim},#{||:#{==:#{pane_current_command},less},#{||:#{==:#{pane_current_command},man},#{==:#{pane_current_command},more}}}}}" \
    "send-keys C-d" \
    "copy-mode; send-keys -X halfpage-down"

bind-key -n C-u if-shell -F "#{||:#{==:#{pane_current_command},nvim},#{||:#{==:#{pane_current_command},vim},#{||:#{==:#{pane_current_command},less},#{||:#{==:#{pane_current_command},man},#{==:#{pane_current_command},more}}}}}" \
    "send-keys C-u" \
    "copy-mode; send-keys -X halfpage-up"
